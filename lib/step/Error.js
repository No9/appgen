
"use strict";

var common = require('../common')
var _ = common._

var Step = require('./Step').Step



// simulate different kinds of errors generated by Steps
function ErrorStep( opt ) {
  var self = Step.apply( null, arguments )

  self.exec = function( ctxt, cb ) {
    var opt = ctxt.opt

    var kind = opt.kind || ctxt.spec.conf.kind || 'Error'
    var msg  = opt.msg  || opt.message || ctxt.spec.conf.msg || ctxt.spec.conf.message || 'unknown error'
    var die  = opt.die  || ctxt.spec.conf.die || 'callback'

    var error
    if( kind.match(/^[eE]rror$/ ) ) {
      error = new Error(msg)
      error.msg = error.message
    }
    else if( kind.match(/^[oO]bject$/ ) ) {
      error = {message:''+msg}
      error.msg = error.message
    }
    else {
      error = ''+msg
    }

    if( 'callback' == die ) {
      cb( error )
    }
    else if( 'throw' == die ) {
      throw error
    }
    else {
      return error
    }
  }

  return self
}
exports.ErrorStep = ErrorStep
